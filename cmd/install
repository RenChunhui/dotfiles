#!/bin/sh

source $DOTPATH/lib/console

#######################################
# 安装包
#######################################
execute_pkg() {
  eval "$1 $2" > /dev/null

  if [[ ${PIPESTATUS[0]} != 0 ]]; then
    eval "$1 $2"

    if [[ $? != 0 ]]; then
      fail "failed to install $2! aborting..."
    fi
  else
    ok "$2 is already installed."
  fi
}



###############################################################################
# Install packages                                                            #
###############################################################################
do_install() {
  if test ! $(which brew); then
    while /bin/bash -c "$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"; do
      /bin/bash -c "$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    done

    # 设置镜像
    # ...

    brew update
  fi

  if test ! $(which dasel); then
    brew install dasel
  fi

  local install=$(dasel 'select' -f $DOTPATH/macos.config.json "install")
  local keys=$(echo $install | dasel -p json -m '-')
  local len=$(echo $install | dasel -p json '.[#]')

  for ((i = 0; i< $len; i++)); do
    local key=$(echo $keys | dasel -p json --plain "[$i]")
    local tasks=$(echo $install | dasel -p json ".$key")
    local tasks_len=$(echo $tasks | dasel -p json '.[#]')

    for ((j = 0; j < $tasks_len; j++)); do
      local task=$(echo $tasks | dasel -p json "[$j]")
      local cmd=$(echo $task | dasel -p json --plain ".install")
      local list=$(echo $task | dasel -p json ".list")
      local list_len=$(echo $list | dasel -p json '.[#]')
      local desc=$(echo $task | dasel -p json --plain '.desc')

      echo "${YELLOW}»${RESET} $desc"

      for ((k=0;k < $list_len;k++)); do
        local pkg_name=$(echo $list | dasel -p json --plain "[$k].name")
        local pkg_desc=$(echo $list | dasel -p json --plain "[$k].desc")

        execute_pkg "$cmd" "$pkg_name"
      done
    done
  done
}



###############################################################################
# Configuration                                                               #
###############################################################################
do_config() {
  local config=$(dasel "select" -f $DOTPATH/macos.config.json "config")
  local len=$(echo $config | dasel -p json '.[#]')

  for ((i=0; i < $len; i++)); do
    local desc=$(echo $config | dasel -p json --plain "[$i].desc")
    local list=$(echo $config | dasel -p json "[$i].list")
    local list_len=$(echo $list | dasel -p json '.[#]')

    echo "${YELLOW}»${RESET} $desc"

    for ((j=0; j < $list_len; j++)); do
      local cmd=$(echo $list | dasel -p json --plain "[$j].cmd")
      local from=$(echo $list | dasel -p json --plain "[$j].from")
      local to=$(echo $list | dasel -p json --plain "[$j].to")
      local desc=$(echo $list | dasel -p json --plain "[$j].desc")

      if [[ ! -e "${to/'$HOME'/$HOME}" ]]; then
        eval "$cmd $from ${to/'$HOME'/$HOME}"
      fi

      echo "  ${GREEN}●${RESET} $desc"
    done
  done
}



###############################################################################
# main                                                                        #
###############################################################################
main() {
  do_install
  do_config

  source $PWD/scripts/create_folder.sh
  source $PWD/scripts/osx.sh
}

main "$@"
