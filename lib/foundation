#!/bin/sh
#
# 变量、方法定义

###############################################################################
# Bash Colors                                                                 #
###############################################################################

# SET
BOLD=$'\e[1m'
DIM=$'\e[2m'

# RESET
RESET=$'\e[0m'
RESET_BOLD=$'\e[21m'
RESET_DIM=$'\e[22m'

# Foreground
RED=$'\e[31m'
GREEN=$'\e[32m'
YELLOW=$'\e[33m'
BLUE=$'\e[34'
PURPLE=$'\e[35'
CYAN=$'\e[36m'
LIGHT_GRAY=$'\e[37m'


###############################################################################
# Icons                                                                       #
###############################################################################

ICON_ASK='？'
ICON_INFO='➜'
ICON_OK='✔'
ICON_WARN='⚠'
ICON_FAIL='✖'
ICON_ARROR_RIGHT="❯"

E_APPLE=""
E_WINE="🍷"
E_LOVE="♥"


###############################################################################
# Functions                                                                   #
###############################################################################

# 提问
ask() {
  echo ${GREEN}?${RESET} $1$ ${DIM}$2${RESET_DIM}
}

# 信息
info() {
  echo ${CYAN}➜${RESET} $1
}

# 成功
ok() {
  echo ${GREEN}✔${RESET} $1
}

# 警告
warn() {
  echo ${YELLOW}⚠${RESET} $1
}

# 失败
fail() {
  echo ${RED}✖${RESET} $1
}

choice() {
  read -r -p "${GREEN}?${RESET} $1 ${DIM}[y|N]${RESET_DIM}" response
  if [[ $response =~ (n|N) ]]; then
    exit;
  fi
}

# 单选
radio() {
  ESC=$( printf "\033")
  cursor_blink_on()  { printf "$ESC[?25h"; }
  cursor_blink_off() { printf "$ESC[?25l"; }
  cursor_to()        { printf "$ESC[$1;${2:-1}H"; }
  print_option()     { printf "  $1"; }
  print_selected()   { printf "${CYAN}${ICON_ARROR_RIGHT} $1${RESET}"; }
  get_cursor_row()   { IFS=';' read -sdR -p $'\E[6n' ROW COL; echo ${ROW#*[}; }
  key_input()        { read -s -n3 key 2>/dev/null >&2
                        if [[ $key = $ESC[A ]]; then echo up;    fi
                        if [[ $key = $ESC[B ]]; then echo down;  fi
                        if [[ $key = ""     ]]; then echo enter; fi; }

  for opt; do printf "\n"; done

  local lastrow=`get_cursor_row`
  local startrow=$(($lastrow - $#))

  trap "cursor_blink_on; stty echo; printf '\n'; exit" 2
  cursor_blink_off

  local selected=0
    while true; do
      # print options by overwriting the last lines
      local idx=0
      for opt; do
        cursor_to $(($startrow + $idx))
        if [ $idx -eq $selected ]; then
          print_selected "$opt"
        else
          print_option "$opt"
        fi
        ((idx++))
      done

      # user key control
      case `key_input` in
        enter) break;;
        up)    ((selected--));
            if [ $selected -lt 0 ]; then selected=$(($# - 1)); fi;;
        down)  ((selected++));
            if [ $selected -ge $# ]; then selected=0; fi;;
      esac
  done

  cursor_to $lastrow
  printf "\n"
  cursor_blink_on

  return $selected
}
